

spring.application.name=feign-client-demo

server.port=8080

#server-demo.ribbon.listOfServers=http://localhost:64664,http://localhost:61241,http://localhost:61215
#
#ribbon.eager-load.enabled=true
#ribbon.eager-load.clients[0]=server-demo

server-demo=localhost:8080

feign.okhttp.enabled=true

feign.hystrix.enabled=false



#----------------------feign client \u914D\u7F6E\u9879
# \u6BCF\u4E2Afeign client \u7684\u914D\u7F6E\u9879 feign.client.config\u4E3Aprefix  server-demo \u4E3Afeign client\u4E2D\u7684name or value \u503C loggerLevel \u53D6\u81EA\u4E8EFeignClientProperties\u4E2D\u7684\u5C5E\u6027
#feign.client.config.server-demo.loggerLevel=BASIC
#feign.client.config.server-demo.connectTimeout=
#feign.client.config.server-demo.readTimeout=

# default \u53EF\u4EE5\u7406\u89E3\u4E3Afeign client\u7684\u5168\u5C40\u9ED8\u8BA4\u914D\u7F6E
#feign.client.default.loggerLevel=FULL

# \u8BE5\u914D\u7F6E\u9879 \u7528\u4E8E\u8C03\u8282\u4F18\u5148\u7EA7 \u9ED8\u8BA4 properties \u4F18\u5148\u7EA7\u9AD8\u4E8E \u4E00\u5207configuration \u914D\u7F6E \u4E0B\u9762\u7684\u503C\u4E3Afalse \u5219 \u4F18\u5148\u7EA7\u53CD\u8FC7\u6765
# Feign \u914D\u7F6E\u4F18\u5148\u7EA7 \u9ED8\u8BA4\u60C5\u51B5\u4E0B \u4E3A
# feign.client.server-demo.\u914D\u7F6E\u9879 >feign.client.default.\u914D\u7F6E\u9879 > \u67D0\u4E2Aclient\u7684configuration > client\u7684\u5168\u5C40\u9ED8\u8BA4configuration
#feign.client.defaultToProperties=false

# \u5F53feign.client.defaultToProperties=false \u65F6 \u4F18\u5148\u7EA7\u4E3A
# \u67D0\u4E2Aclient\u7684configuration > client\u7684\u5168\u5C40\u9ED8\u8BA4configuration > feign.client.server-demo.\u914D\u7F6E\u9879 >feign.client.default.\u914D\u7F6E\u9879

# \u53C2\u89C1 FeignClientFactoryBean\u4E2D\u7684\u4EE3\u7801
#if (properties.isDefaultToProperties()) { //properties.isDefaultToProperties()=feign.client.defaultToProperties\u7684\u503C
#configureUsingConfiguration(context, builder);
#configureUsingProperties(properties.getConfig().get(properties.getDefaultConfig()), builder);
#configureUsingProperties(properties.getConfig().get(this.name), builder);
#} else {
#configureUsingProperties(properties.getConfig().get(properties.getDefaultConfig()), builder);
#configureUsingProperties(properties.getConfig().get(this.name), builder);
#configureUsingConfiguration(context, builder);
#}



#---------------------------feign cleint \u7684\u7194\u65AD\u7B56\u7565\u914D\u7F6E
# properties \u914D\u7F6E \u6BCF\u4E2Aclient\u72EC\u6709\u7684 \u7194\u65AD\u6B64\u7565 HystrixCommandProperties\u914D\u7F6E\u9879\u5728\u8FD9\u4E2A\u4E2D \u4F18\u5148\u7EA7\u4F4E\u4E8Ejava \u4EE3\u7801\u914D\u7F6E
#
#protected HystrixCommandProperties(HystrixCommandKey key, HystrixCommandProperties.Setter builder) {
#this(key, builder, "hystrix");  hystrix=propertyPrefix
#}

#private static HystrixProperty<Boolean> getProperty(String propertyPrefix, HystrixCommandKey key, String instanceProperty, Boolean builderOverrideValue, Boolean defaultValue) {
#return forBoolean()
#.add(propertyPrefix + ".command." + key.name() + "." + instanceProperty, builderOverrideValue)
#.add(propertyPrefix + ".command.default." + instanceProperty, defaultValue)
#.build();
#}
# propertyPrefix + ".command." + key.name() + "." + \u53C2\u6570\u9879 \u6BD4\u5982execution.isolation.thread.timeoutInMilliseconds  propertyPrefix =hystrix
# ITestService#test(String)= key.name
#hystrix.command.ITestService#test(String).execution.isolation.thread.timeoutInMilliseconds=1




# \u6BCF\u4E2Afeign client\u7684\u7EBF\u7A0B\u6C60\u53C2\u6570 \u914D\u7F6E\u4EE3\u7801\u5728HystrixThreadPoolProperties\u7C7B\u4E2D
#protected HystrixThreadPoolProperties(HystrixThreadPoolKey key, Setter builder) {
#this(key, builder, "hystrix");
#}
#\u5176\u4E2DpropertyPrefix=hystrix
#private static HystrixProperty<Integer> getProperty(String propertyPrefix, HystrixThreadPoolKey key, String instanceProperty, Integer builderOverrideValue, Integer defaultValue) {
#return forInteger()
#.add(propertyPrefix + ".threadpool." + key.name() + "." + instanceProperty, builderOverrideValue)
#.add(propertyPrefix + ".threadpool.default." + instanceProperty, defaultValue)
#.build();
#}
# \u914D\u7F6E\u9879 \u62FC\u63A5= propertyPrefix + ".threadpool." + key.name()+\u53C2\u6570\u9879  \u5176\u4E2Dkey.name=server-demo
#hystrix.threadpool.server-demo.coreSize=2
#hystrix.threadpool.server-demo.metrics.rollingStats.timeInMilliseconds=100


